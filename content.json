{"meta":{"title":"wuqiansheng","subtitle":null,"description":null,"author":"wqs","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-04-02T10:31:23.558Z","updated":"2017-03-01T07:49:36.000Z","comments":true,"path":"baidu_verify_mRI3FWIlnZ.html","permalink":"http://yoursite.com/baidu_verify_mRI3FWIlnZ.html","excerpt":"","text":"mRI3FWIlnZ"},{"title":"","date":"2018-04-02T10:31:23.566Z","updated":"2017-02-26T02:49:32.000Z","comments":true,"path":"googlebb37df01ed6b9a6e.html","permalink":"http://yoursite.com/googlebb37df01ed6b9a6e.html","excerpt":"","text":"google-site-verification: googlebb37df01ed6b9a6e.html"},{"title":"categories","date":"2018-04-06T08:16:29.000Z","updated":"2018-04-06T08:16:59.334Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-04-06T08:16:22.000Z","updated":"2018-04-06T08:16:49.180Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"test","slug":"test","date":"2018-04-06T07:40:38.000Z","updated":"2018-04-06T07:40:58.922Z","comments":true,"path":"2018/04/06/test/","link":"","permalink":"http://yoursite.com/2018/04/06/test/","excerpt":"sdfgsdgsdgsd dfgdfgdgdfggdategd","text":"sdfgsdgsdgsd dfgdfgdgdfggdategdfgdfg","categories":[],"tags":[]},{"title":"LightGBM原理之论文详解","slug":"LightGBM原理之论文详解","date":"2018-04-02T07:14:09.000Z","updated":"2018-04-02T09:29:20.000Z","comments":true,"path":"2018/04/02/LightGBM原理之论文详解/","link":"","permalink":"http://yoursite.com/2018/04/02/LightGBM原理之论文详解/","excerpt":"","text":"提升树是利用加模型与前向分布算法实现学习的优化过程，它有一些高效实现，如XGBoost, pGBRT，GBDT等。其中GBDT采用负梯度作为划分的指标（信息增益），XGBoost则利用到二阶导数。他们共同的不足是，计算信息增益需要扫描所有样本，从而找到最优划分点。在面对大量数据或者特征维度很高时，他们的效率和扩展性很难使人满意。微软开源的LightGBM（基于GBDT的）则很好的解决这些问题，它主要包含两个算法： GOSS（从减少样本角度）：排除大部分小梯度的样本，仅用剩下的样本计算信息增益。 EFB（从减少特征角度）：捆绑互斥特征，也就是他们很少同时取非零值（也就是用一个合成特征代替）。 前言： GBDT是基于决策树的集成算法，采用前向分布算法，在每次迭代中，都是通过负梯度拟合残差，从而学习一颗决策树，最耗时的步骤就是找最优划分点。一种流行的方法就是预排序，核心是在已经排好序的特征值上枚举所有可能的特征点。另一种改进则是直方图算法，他把连续特征值划分到k个桶中取，划分点则在这k个点中选取。k&lt;&lt;d，所以在内存消耗和训练速度都更佳，且在实际的数据集上表明，离散化的分裂点对最终的精度影响并不大，甚至会好一些。原因在于决策树本身就是一个弱学习器，采用Histogram算法会起到正则化的效果，有效地防止模型的过拟合。LightGBM也是基于直方图的。 为了减少训练数据，最直接的方法就是欠采样(down sample)，比如说过滤掉权重低于阈值的样本。SGB(随机梯度下降)采用的是在每轮迭代中选取随机子集进行训练弱分类器，AdaBoost则采用的是动态调整采样率。SGB可以应用到GBDT，但会影响精度，其他的则不能直接引入，因为GBDT中没有这种内在的权重。 为了减少特征，通常做的是PCA降维，但是这些方法都假设特征是冗余的，这并不一直正确。 一般大型数据集都是稀疏的，基于pre-sorted的GBDT可以通过忽略零值特征，从而减少训练代价。但是，基于histogram的则没有针对稀疏特性的优化方案，它只是计算累加值，不管你是0还是非0。所以，利用稀疏性的GBDT是很必要的。 接下来就要细细说说这两个算法。 GOSS在AdaBoost中采用权重很好诠释了样本的重要性，GBDT没有这种权重，但是我们注意到每个数据样本的梯度可以被用来做采样的信息。也就是，如果一个样本的梯度小，那么表明这个样本已经训练好了，它的训练误差很小了，我们可以丢弃这些数据。当然，改变数据分布会造成模型的精度损失。GOSS则通过保存大梯度样本，随机选取小梯度样本，并为其弥补上一个常数权重。这样，GOSS更关注训练不足的样本，同时也不会改变原始数据太多。 具体算法如下： GOSS 先根据梯度对样本进行排序，选取 a 100% 的top样本，再从剩余数据中随机选取 b 100% 的样本，并乘以 $$\\frac{1-a}{b}$$的系数放大。 以前计算特征j在d值点的信息增益是这样的： 3.1 现在是这样的： 3.2 通过证明，近似误差很好，很贴近使用所有数据的模型。 这也解释了LightGBM的 leaf-wise 生成策略。 Leaf-wise (Best-first) 的决策树生长策略大部分决策树的学习算法通过 level(depth)-wise 策略生长树，如下图一样： _images/level-wise.png LightGBM 通过 leaf-wise (best-first)[6] 策略来生长树。它将选取具有最大 delta loss 的叶节点来生长。 当生长相同的 #leaf，leaf-wise 算法可以比 level-wise 算法减少更多的损失。 当 #data 较小的时候，leaf-wise 可能会造成过拟合。 所以，LightGBM 可以利用额外的参数 max_depth 来限制树的深度并避免过拟合（树的生长仍然通过 leaf-wise 策略）。 _images/leaf-wise.png ####EFB 高维数据一般是稀疏的，可以设计一种损失最小的特征减少方法。并且，在稀疏特征空间中，许多特征都是互斥的，也就是它们几乎不同时取非0值。因此，我们可以安全的把这些互斥特征绑到一起形成一个特征，然后基于这些特征束构建直方图，这样又可以加速了。 有两个问题待解决，如何判断哪些特征该绑到一起，如何构建绑定。这是NP难的。 首先，转换到图着色问题。G=(V, E)，把关联矩阵G的每一行看成特征，从而得到|V|个特征，互斥束就图中颜色相同的顶点。图中点就是特征，边代表两个特征不互斥，也就是特征之间的冲突。如果算法允许小的冲突，可以得到更小的特征束数量，计算效率会更高。证明发现随机污染一小部分特征值，最多影响训练精度 $$O([(1-\\gamma)n]^{-2/3})$$，$$\\gamma$$是所有束中冲突最大的。通过选取合适的$$\\gamma$$，我们可以很好的在效率和精度之间寻找平衡。 不互斥 =&gt; 可以同时取非0值，不能区分处理 =&gt; 冲突 最后，排序就按照束的度来进行。当然，更一步优化是不够造图，直接根据非零值的数量排序，这个根据度排序很像，因为更多非0值意味着更高概率的冲突。更改了排序策略，可以避免重复。 第二个问题，合并特征，从而降低训练复杂度，关键是我们可以确保原先特征值可以从特征束中识别出来。因为直方图存储的是特征的离散桶，而不是连续值，我们可以通过把互斥特征放到不同桶，从而构造一个特征束。这可以通过添加偏移实现。如，假设我们有2个特征在一个特征束中，原先特征A的范围为[0,10)，特征B的范围为[0,20)，我们给特征B加上一个偏移10，它就变成[10,30)，这样我们就可以执行安全的合并了，用特征束[0,30)代替特征A和B。具体算法如下。 4 EFB算法可以把很多特征绑到一起，形成更少的稠密特征束，这样可以避免对0特征值的无用的计算。加速计算直方图还可以用一个表记录数据的非0值。 这样，LightGBM的论文基本讲解结束。 其他具体特性（并行，类别特征处理等）详情见： http://lightgbm.apachecn.org/cn/latest/Features.html","categories":[],"tags":[{"name":"LightGBM","slug":"LightGBM","permalink":"http://yoursite.com/tags/LightGBM/"},{"name":"GBDT","slug":"GBDT","permalink":"http://yoursite.com/tags/GBDT/"},{"name":"GOSS","slug":"GOSS","permalink":"http://yoursite.com/tags/GOSS/"},{"name":"EFB","slug":"EFB","permalink":"http://yoursite.com/tags/EFB/"}]},{"title":"Tensorflow Solve Mnist 2","slug":"Tensorflow-Solve-Mnist-2","date":"2017-04-03T07:29:26.000Z","updated":"2017-04-03T07:30:22.000Z","comments":true,"path":"2017/04/03/Tensorflow-Solve-Mnist-2/","link":"","permalink":"http://yoursite.com/2017/04/03/Tensorflow-Solve-Mnist-2/","excerpt":"","text":"卷积神经网络解决MNIST识别12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576# -*- coding: utf-8 -*-# @Time : 2017/4/3 11:40# @Author : wqsimport tensorflow as tffrom tensorflow.examples.tutorials.mnist import input_datamnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)x = tf.placeholder(\"float\", [None, 784])y_ = tf.placeholder(\"float\", [None,10])def weight_variable(shape): initial = tf.truncated_normal(shape, stddev=0.1) return tf.Variable(initial)def bias_variable(shape): initial = tf.constant(0.1, shape=shape) return tf.Variable(initial)def conv2d(x, W): return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')def max_pool_2x2(x): return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')W_conv1 = weight_variable([5, 5, 1, 32]) # patch:5X5, 通道深度为1, 通道输出数目为30b_conv1 = bias_variable([32])x_image = tf.reshape(x, [-1,28,28,1])h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)h_pool1 = max_pool_2x2(h_conv1)W_conv2 = weight_variable([5, 5, 32, 64])b_conv2 = bias_variable([64])h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)h_pool2 = max_pool_2x2(h_conv2)W_fc1 = weight_variable([7 * 7 * 64, 1024])b_fc1 = bias_variable([1024])h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)keep_prob = tf.placeholder(\"float\")h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)W_fc2 = weight_variable([1024, 10])b_fc2 = bias_variable([10])y_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)sess = tf.Session()cross_entropy = tf.reduce_mean( tf.nn.softmax_cross_entropy_with_logits(labels=y_, logits=y_conv))train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)correct_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))sess.run(tf.global_variables_initializer())for i in range(2000): batch = mnist.train.next_batch(50) if i%100 == 0: train_accuracy = accuracy.eval(session=sess, feed_dict=&#123; x:batch[0], y_: batch[1], keep_prob: 1.0&#125;) print(\"step %d, training accuracy %g\"%(i, train_accuracy)) train_step.run(session=sess, feed_dict=&#123;x: batch[0], y_: batch[1], keep_prob: 0.5&#125;)print(\"test accuracy %g\"%accuracy.eval(session=sess, feed_dict=&#123; x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0&#125;))sess.close()","categories":[],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://yoursite.com/tags/tensorflow/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Tensorflow Solve Mnist 1","slug":"Tensorflow-Solve-Mnist-1","date":"2017-04-03T07:27:44.000Z","updated":"2017-04-03T07:37:10.000Z","comments":true,"path":"2017/04/03/Tensorflow-Solve-Mnist-1/","link":"","permalink":"http://yoursite.com/2017/04/03/Tensorflow-Solve-Mnist-1/","excerpt":"","text":"单层神经网络解决MNIST识别12345678910111213141516171819202122232425import tensorflow as tffrom tensorflow.examples.tutorials.mnist import input_datamnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)x = tf.placeholder(\"float\", [None, 784])W = tf.Variable(tf.zeros([784,10]))b = tf.Variable(tf.zeros([10]))y = tf.nn.softmax(tf.matmul(x,W) + b)y_ = tf.placeholder(\"float\", [None,10])cross_entropy = -tf.reduce_sum(y_*tf.log(y))train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)init = tf.initialize_all_variables()sess = tf.Session()sess.run(init)for i in range(1000): batch_xs, batch_ys = mnist.train.next_batch(100) sess.run(train_step, feed_dict=&#123;x: batch_xs, y_: batch_ys&#125;)correct_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))accuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))print(sess.run(accuracy, feed_dict=&#123;x: mnist.test.images, y_: mnist.test.labels&#125;))","categories":[],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://yoursite.com/tags/tensorflow/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"leetcode29. Divide Two Integers","slug":"leetcode29-Divide-Two-Integers","date":"2017-02-22T11:12:11.000Z","updated":"2017-02-22T11:23:20.000Z","comments":true,"path":"2017/02/22/leetcode29-Divide-Two-Integers/","link":"","permalink":"http://yoursite.com/2017/02/22/leetcode29-Divide-Two-Integers/","excerpt":"Divide two integers without using multiplication, division and mod operator. If it is overflow, return MAX_INT. 题目链接：https://leetcode.com/problems/divide-two-integers/?tab=Description 提示不能用乘除和取模，首先想到得减法，但是减法会超时，我们可以采用指数衰减得减法。b(1+2^1^+2^2^+…)+c = a","text":"Divide two integers without using multiplication, division and mod operator. If it is overflow, return MAX_INT. 题目链接：https://leetcode.com/problems/divide-two-integers/?tab=Description 提示不能用乘除和取模，首先想到得减法，但是减法会超时，我们可以采用指数衰减得减法。b(1+2^1^+2^2^+…)+c = a Python12345678910111213141516171819202122232425class Solution(object): def divide(self, dividend, divisor): \"\"\" :type dividend: int :type divisor: int :rtype: int \"\"\" sign = (dividend &lt; 0 and divisor &gt; 0) or (dividend &gt; 0 and divisor &lt; 0) a, b = abs(dividend), abs(divisor) ret, c = 0, 0 while a &gt;= b: c = b i = 0 while a &gt;= c: a -= c ret += (1 &lt;&lt; i) i += 1 c &lt;&lt;= 1 if sign: ret = -ret return min(max(-2147483648, ret), 2147483647)s = Solution()print(s.divide(5, 2))","categories":[],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"http://yoursite.com/tags/leetcode/"}]},{"title":"A Brief Introduction To Recommender System","slug":"A-Brief-Introduction-To-Recommender-System","date":"2016-12-12T07:18:18.000Z","updated":"2016-12-12T07:51:04.000Z","comments":true,"path":"2016/12/12/A-Brief-Introduction-To-Recommender-System/","link":"","permalink":"http://yoursite.com/2016/12/12/A-Brief-Introduction-To-Recommender-System/","excerpt":"","text":"推荐系统简介（一）为什么需要需要系统 信息复杂，不同的用户偏好； 提高驻留时间、长尾、转化率和收益。 历史 信息检索和信息过滤 手动协同过滤，Tapestry 自动协同过滤，GroupLens 分析框架 领域：商业 目的：推荐商品、信息 推荐内容：情景相关 谁的建议：专家、普通人 个性化水平：基于人口统计的，非个性化的，个性化的 隐私和可靠性：隐私保护和推荐是否被商业利用 接口：输入（清楚|模糊）和输出接口 推荐算法：基于内容、知识、协同过滤等。 构成 用户 物品 评价 社区 待续。。。","categories":[],"tags":[{"name":"推荐系统","slug":"推荐系统","permalink":"http://yoursite.com/tags/推荐系统/"}]},{"title":"博客添加打赏功能","slug":"博客添加打赏功能","date":"2016-09-23T09:48:28.000Z","updated":"2016-09-23T11:42:20.000Z","comments":true,"path":"2016/09/23/博客添加打赏功能/","link":"","permalink":"http://yoursite.com/2016/09/23/博客添加打赏功能/","excerpt":"我使用的主题是yilia，在此以此为例。 第一步: 编写打赏模块主题文件 layout\\_partial 下新建 donate.ejs , 内容如下 : 123456789101112131415161718192021222324&lt;! -- 添加捐赠图标 --&gt;&lt;div class =&quot;post-donate&quot;&gt; &lt;div id=&quot;donate_board&quot; class=&quot;donate_bar center&quot;&gt; &lt;a id=&quot;btn_donate&quot; class=&quot;btn_donate&quot; href=&quot;javascript:;&quot; title=&quot;打赏&quot;&gt;&lt;/a&gt; &lt;span class=&quot;donate_txt&quot;&gt; &amp;uarr;&lt;br&gt; &lt;%=theme.donate_message%&gt; &lt;/span&gt; &lt;br&gt; &lt;/div&gt; &lt;div id=&quot;donate_guide&quot; class=&quot;donate_bar center hidden&quot; &gt; &lt;!-- 支付宝打赏图案 --&gt; &lt;img src=&quot;支付宝支付图片链接&quot; alt=&quot;支付宝打赏&quot;&gt; &lt;!-- 微信打赏图案 --&gt; &lt;img src=&quot;微信支付图片链接&quot; alt=&quot;微信打赏&quot;&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; document.getElementById(&apos;btn_donate&apos;).onclick = function()&#123; $(&apos;#donate_board&apos;).addClass(&apos;hidden&apos;); $(&apos;#donate_guide&apos;).removeClass(&apos;hidden&apos;); &#125; &lt;/script&gt;&lt;/div&gt;&lt;! -- 添加捐赠图标 --&gt;","text":"我使用的主题是yilia，在此以此为例。 第一步: 编写打赏模块主题文件 layout\\_partial 下新建 donate.ejs , 内容如下 : 123456789101112131415161718192021222324&lt;! -- 添加捐赠图标 --&gt;&lt;div class =&quot;post-donate&quot;&gt; &lt;div id=&quot;donate_board&quot; class=&quot;donate_bar center&quot;&gt; &lt;a id=&quot;btn_donate&quot; class=&quot;btn_donate&quot; href=&quot;javascript:;&quot; title=&quot;打赏&quot;&gt;&lt;/a&gt; &lt;span class=&quot;donate_txt&quot;&gt; &amp;uarr;&lt;br&gt; &lt;%=theme.donate_message%&gt; &lt;/span&gt; &lt;br&gt; &lt;/div&gt; &lt;div id=&quot;donate_guide&quot; class=&quot;donate_bar center hidden&quot; &gt; &lt;!-- 支付宝打赏图案 --&gt; &lt;img src=&quot;支付宝支付图片链接&quot; alt=&quot;支付宝打赏&quot;&gt; &lt;!-- 微信打赏图案 --&gt; &lt;img src=&quot;微信支付图片链接&quot; alt=&quot;微信打赏&quot;&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; document.getElementById(&apos;btn_donate&apos;).onclick = function()&#123; $(&apos;#donate_board&apos;).addClass(&apos;hidden&apos;); $(&apos;#donate_guide&apos;).removeClass(&apos;hidden&apos;); &#125; &lt;/script&gt;&lt;/div&gt;&lt;! -- 添加捐赠图标 --&gt; 第二步 : 设置大赏模块的样式source\\css\\_partial 下新建 donate.styl 输入如下内容 : 12345678910111213141516171819202122232425262728293031323334353637383940414243444546.donate_bar &#123; text-align: center; margin-top: 5%&#125;.donate_bar a.btn_donate &#123; display: inline-block; width: 82px; height: 82px; margin-left: auto; margin-right: auto; background: url(http://img.t.sinajs.cn/t5/style/images/apps_PRF/e_media/btn_reward.gif)no-repeat; -webkit-transition: background 0s; -moz-transition: background 0s; -o-transition: background 0s; -ms-transition: background 0s; transition: background 0s&#125;.donate_bar a.btn_donate:hover &#123; background-position: 0 -82px&#125;.donate_bar .donate_txt &#123; display: block; color: #9d9d9d; font: 14px/2 \"Microsoft Yahei\"&#125;.donate_bar.hidden&#123; display: none&#125;.post-donate&#123; margin-top: 80px;&#125;#donate_guide&#123; height: 210px; width: 420px; margin: 0 auto;&#125;#donate_guide img&#123; height: 200px; height: 200px;&#125; 最后在 source\\css\\style.styl 中添加 @import ‘_partial/donate’ 第三步 : 将打赏模块整合到文章中在layout\\_partial\\article.ejs的 标签中添加 : 123&lt;% if (!index &amp;&amp; theme.donate &amp;&amp; post.donate!=false)&#123; %&gt; &lt;%- partial('donate') %&gt;&lt;% &#125; %&gt; 第四步 : 编写配置修改 _config.yml 如下: 1234#是否开启打赏功能donate: true#打赏文案donate_message: 欣赏此文？求鼓励，求支持！ Over.","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"MongoDB install","slug":"MongoDB-install","date":"2016-07-29T05:54:01.000Z","updated":"2016-07-29T05:59:14.000Z","comments":true,"path":"2016/07/29/MongoDB-install/","link":"","permalink":"http://yoursite.com/2016/07/29/MongoDB-install/","excerpt":"","text":"创建data,log目录db: C:\\data\\dblog: C:data\\log\\MongDB.log 创建windows服务mongod –logpath C:\\data\\log\\MongoDB.log –logappend –dbpath C:\\data\\db –directoryperdb –serviceName MongoDB –install 启动net start MongoDB","categories":[],"tags":[{"name":"MongoDB","slug":"MongoDB","permalink":"http://yoursite.com/tags/MongoDB/"}]},{"title":"常用知识","slug":"常用知识","date":"2016-04-25T06:31:39.000Z","updated":"2016-07-22T00:52:32.000Z","comments":true,"path":"2016/04/25/常用知识/","link":"","permalink":"http://yoursite.com/2016/04/25/常用知识/","excerpt":"Linux基础:http://linuxtools-rst.readthedocs.org/zh_CN/latest/index.html git基础:http://www.bootcss.com/p/git-guide/http://streamers.github.io/blog/20160307/git-common-command.html markdown基础:https://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.mdhttp://www.appinn.com/markdown/","text":"Linux基础:http://linuxtools-rst.readthedocs.org/zh_CN/latest/index.html git基础:http://www.bootcss.com/p/git-guide/http://streamers.github.io/blog/20160307/git-common-command.html markdown基础:https://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.mdhttp://www.appinn.com/markdown/ Ubuntu英文版安装中文输入法: Add fcitx ppa: 1sudo add-apt-repository ppa:fcitx-team/nightly or 1sudo add-apt-repository ppa:fcitx-team/stable After you add the repository, you need to use: 1sudo apt-get update Install googlepinyin: 1sudo apt-get install fcitx-googlepinyin Active input method : 1im-config Click through and select fcitx. Click through.Restart your computer. Click the keyboard in the top right corner. Press Configure Current Input Method. Press + to add a new language. De-select “Only show current language”. Type in Google-Pinyin. Press OK. To switch between keyboards press Ctrl+Space matlab 2014b vs2015see : http://kaba.hilvi.org/homepage/blog/vs2015_in_matlab_2015/vs_2015_in_matlab_2015.htm copy the file into:12C:\\Program Files\\MATLAB\\R2015a\\bin\\win64\\mexopts C:\\Program Files\\MATLAB\\MATLAB Production Server\\R2015a\\bin\\win64\\mexopts http://www.linuxidc.com/Linux/2008-03/11662p3.htm","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/tags/Ubuntu/"},{"name":"matlab","slug":"matlab","permalink":"http://yoursite.com/tags/matlab/"}]},{"title":"终于快毕业了","slug":"终于快毕业了","date":"2016-04-09T07:27:28.000Z","updated":"2016-04-09T07:49:24.000Z","comments":true,"path":"2016/04/09/终于快毕业了/","link":"","permalink":"http://yoursite.com/2016/04/09/终于快毕业了/","excerpt":"","text":"时间过的真快呀，大学浑浑噩噩度过了四年，没学到什么反而感觉身心俱疲，不该不该啊。惧于提前走向社会，而选择了读研的道路也不知道最终结果是好是坏，还有三年得熬呀。不过，凡事也得往好的地方想嘛。大学尚有诸多遗憾没完成，甚是遗憾，以后可没这么闲啊。趁着现在也不想做毕设，慢慢来去做啦。","categories":[],"tags":[{"name":"生活随笔","slug":"生活随笔","permalink":"http://yoursite.com/tags/生活随笔/"}]},{"title":"解决JavaWeb和Mysql中文乱码问题","slug":"JavaWeb-Mysql","date":"2016-04-06T07:14:09.000Z","updated":"2016-04-06T07:21:54.000Z","comments":true,"path":"2016/04/06/JavaWeb-Mysql/","link":"","permalink":"http://yoursite.com/2016/04/06/JavaWeb-Mysql/","excerpt":"","text":"首先同一采用utf-8 1.数据库属性改为utf-8必要时更改mysql的配置文件：default-character-set=utf8character-set-server=utf8 2.连接数据库：jdbc:mysql://localhost:3306/db_bug?useUnicode=true&amp;characterEncoding=utf8 3.request中文乱码：get请求的编码方式为:ISO-8859-1doGet方法：例子：String spotName=new String(request.getParameter(“spotName”).getBytes(“ISO-8859-1”),”UTF-8”);doPost方法:request.setCharacterEncoding(“UTF-8”); 4.response中文乱码：response.setCharacterEncoding(“UTF-8”);","categories":[],"tags":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/tags/JavaWeb/"},{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/tags/Mysql/"}]},{"title":"My Blog With Django","slug":"My-Blog-With-Django","date":"2016-04-06T06:58:30.000Z","updated":"2016-04-06T07:18:14.000Z","comments":true,"path":"2016/04/06/My-Blog-With-Django/","link":"","permalink":"http://yoursite.com/2016/04/06/My-Blog-With-Django/","excerpt":"","text":"Environment Python3.X Django1.9.X Sublime Text 3 #Usage You can use the example by doing step by step below: 1234$ git clone https://github.com/wqs123/my_blog.git$ cd my_blog$ pip install -r requirement.txt$ python manage.py runserver Then you will see1234567Performing system checks...System check identified no issues (0 silenced).March 18, 2016 - 19:40:42Django version 1.9, using settings &apos;my_blog.settings&apos;Starting development server at http://127.0.0.1:8000/Quit the server with CTRL-BREAK. Now open browser and input : http://127.0.0.1:8000/article/ ,you will see the main page like below: Alt text and http://127.0.0.1:8000/admin/ you can see the admin page: Alt text","categories":[],"tags":[{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/tags/Blog/"},{"name":"Django1.9","slug":"Django1-9","permalink":"http://yoursite.com/tags/Django1-9/"},{"name":"Python3.5","slug":"Python3-5","permalink":"http://yoursite.com/tags/Python3-5/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://yoursite.com/tags/Bootstrap/"}]}]}